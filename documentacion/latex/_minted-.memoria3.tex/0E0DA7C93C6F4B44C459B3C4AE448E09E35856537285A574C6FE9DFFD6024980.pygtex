\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{n+nx}{ApolloServer}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{gql}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}apollo\PYGZhy{}server\PYGZdq{}}\PYG{p}{);}
\PYG{k+kd}{const}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{n+nx}{MongoClient}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{require}\PYG{+w}{ }\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}mongodb\PYGZdq{}}\PYG{p}{);}
\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{redis}\PYG{+w}{  }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{require}\PYG{+w}{ }\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}redis\PYGZdq{}}\PYG{p}{);}
\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{AWS}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}aws\PYGZhy{}sdk\PYGZsq{}}\PYG{p}{);}


\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{typeDefs}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}./types\PYGZdq{}}\PYG{p}{);}
\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{queryResolver}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}./resolvers/query.js\PYGZdq{}}\PYG{p}{)}
\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{mutationResolver}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}./resolvers/mutation.js\PYGZdq{}}\PYG{p}{)}

\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{resolvers}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{  }\PYG{n+nx}{Query}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nx}{queryResolver}\PYG{p}{.}\PYG{n+nx}{Query}\PYG{p}{,}
\PYG{+w}{  }\PYG{n+nx}{Mutation}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nx}{mutationResolver}\PYG{p}{.}\PYG{n+nx}{Mutation}
\PYG{p}{\PYGZcb{}}


\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{redisClient}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{redis}\PYG{p}{.}\PYG{n+nx}{createClient}\PYG{p}{(\PYGZob{}}
\PYG{+w}{  }\PYG{n+nx}{socket}\PYG{o}{:}\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n+nx}{host}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{env}\PYG{p}{.}\PYG{n+nx}{REDIS\PYGZus{}HOST}\PYG{p}{,}
\PYG{+w}{    }\PYG{n+nx}{port}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{env}\PYG{p}{.}\PYG{n+nx}{REDIS\PYGZus{}PORT}\PYG{p}{,}
\PYG{+w}{    }\PYG{n+nx}{tls}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kc}{true}
\PYG{+w}{  }\PYG{p}{\PYGZcb{},}
\PYG{+w}{  }\PYG{n+nx}{password}\PYG{o}{:}\PYG{+w}{ }\PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{env}\PYG{p}{.}\PYG{n+nx}{REDIS\PYGZus{}PASS}\PYG{p}{,}
\PYG{p}{\PYGZcb{});}

\PYG{c+c1}{// const redisclient2 = new Client()}
\PYG{c+c1}{// redisclient2.open(\PYGZdq{}rdbesspruebapoc2.redis.cache.windows.net:6380,password=Jw0MAxql2HhF5trVmPhGzPA52bBOdOl05AzCaDJyh5U=,ssl=True,abortConnect=False\PYGZdq{})}
\PYG{c+c1}{// console.log(redisclient2)}

\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{redisClient}\PYG{p}{)}

\PYG{n+nx}{redisClient}\PYG{p}{.}\PYG{n+nx}{on}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{err}\PYG{+w}{ }\PYG{p}{=\PYGZgt{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{  }\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Error redis \PYGZsq{}}\PYG{o}{+}\PYG{+w}{ }\PYG{n+nx}{err}\PYG{p}{)}
\PYG{p}{\PYGZcb{})}

\PYG{c+c1}{// var s3 = new AWS.S3(\PYGZob{}}
\PYG{c+c1}{//   accessKeyId: \PYGZdq{}YiwdRzqjrGKbkUyL\PYGZdq{}, //`\PYGZdl{}\PYGZob{}process.env.S3\PYGZus{}ACCESS\PYGZus{}KEY\PYGZus{}ID\PYGZcb{}`,//\PYGZdq{}m1YTT0jkovQuulkV\PYGZdq{},//,//\PYGZdq{}m1YTT0jkovQuulkV\PYGZdq{},}
\PYG{c+c1}{//   secretAccessKey: \PYGZdq{}4eCBiaKAV1c0Yn09Xrf159rQfZViNyyL\PYGZdq{},//`\PYGZdl{}\PYGZob{}process.env.S3\PYGZus{}SECRET\PYGZus{}ACCESS\PYGZus{}KEY\PYGZcb{}`,//,//\PYGZdq{}KbN1vw3ZxdXWr8cz7kSWprpwbcyvyN28\PYGZdq{},}
\PYG{c+c1}{//   endpoint: \PYGZdq{}http://s3:9000\PYGZdq{}, //`\PYGZdl{}\PYGZob{}process.env.S3\PYGZus{}URL\PYGZcb{}`, //process.env.S3\PYGZus{}URL, //localhost 9000}
\PYG{c+c1}{//   s3ForcePathStyle: true,}
\PYG{c+c1}{//   signatureVersion: \PYGZdq{}v4\PYGZdq{}}
\PYG{c+c1}{// \PYGZcb{});}

\PYG{c+c1}{// s3.deleteObject}


\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{mongourl}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{env}\PYG{p}{.}\PYG{n+nx}{MONGO\PYGZus{}URL}\PYG{p}{;}
\PYG{c+c1}{// console.log(mongourl)}
\PYG{c+c1}{// const mongourl = \PYGZdq{}mongodb://localhost:27017\PYGZdq{}}

\PYG{k}{if}\PYG{p}{(}\PYG{o}{!}\PYG{n+nx}{mongourl}\PYG{p}{)}\PYG{+w}{ }\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{error}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}mongo url missing\PYGZdq{}}\PYG{p}{);}
\PYG{k}{else}\PYG{p}{\PYGZob{}}
\PYG{+w}{  }\PYG{n+nx}{redisClient}\PYG{p}{.}\PYG{n+nx}{connect}\PYG{p}{();}
\PYG{+w}{  }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{client}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{MongoClient}\PYG{p}{(}\PYG{n+nx}{mongourl}\PYG{p}{);}
\PYG{+w}{  }\PYG{k}{try}\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n+nx}{client}\PYG{p}{.}\PYG{n+nx}{connect}\PYG{p}{().}\PYG{n+nx}{then}\PYG{p}{(()}\PYG{+w}{ }\PYG{p}{=\PYGZgt{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{      }\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}mongo db connected\PYGZdq{}}\PYG{p}{);}
\PYG{+w}{      }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{server}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{o+ow}{new}\PYG{+w}{ }\PYG{n+nx}{ApolloServer}\PYG{p}{(\PYGZob{}}
\PYG{+w}{        }\PYG{n+nx}{typeDefs}\PYG{p}{,}\PYG{+w}{ }
\PYG{+w}{        }\PYG{n+nx}{resolvers}\PYG{p}{,}
\PYG{+w}{        }\PYG{n+nx}{introspection}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kc}{true}\PYG{p}{,}
\PYG{+w}{        }\PYG{n+nx}{playground}\PYG{o}{:}\PYG{+w}{ }\PYG{k+kc}{true}\PYG{p}{,}
\PYG{+w}{        }\PYG{n+nx}{context}\PYG{o}{:}\PYG{+w}{ }\PYG{k}{async}\PYG{+w}{ }\PYG{p}{(\PYGZob{}}\PYG{n+nx}{req}\PYG{p}{\PYGZcb{})}\PYG{+w}{ }\PYG{p}{=\PYGZgt{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{          }\PYG{c+c1}{//el nombre Auth... tiene que estar calcado como llave del header}
\PYG{+w}{          }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{token}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{req}\PYG{p}{.}\PYG{n+nx}{headers}\PYG{p}{.}\PYG{n+nx}{authorization}\PYG{+w}{ }\PYG{o}{||}\PYG{+w}{ }\PYG{l+s+s2}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}\PYG{+w}{ }
\PYG{+w}{          }
\PYG{+w}{          }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{db}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nx}{client}\PYG{p}{.}\PYG{n+nx}{db}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}test\PYGZdq{}}\PYG{p}{);}
\PYG{+w}{          }\PYG{c+c1}{// const user = await db.collection(\PYGZdq{}users\PYGZdq{}).findOne(\PYGZob{}token\PYGZcb{}) //si no hay token correcto, token sera null}
\PYG{+w}{          }\PYG{c+c1}{// return \PYGZob{}db: client.db(\PYGZdq{}test\PYGZdq{})\PYGZcb{}}
\PYG{+w}{          }
\PYG{+w}{          }\PYG{k+kd}{const}\PYG{+w}{ }\PYG{n+nx}{user}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{await}\PYG{+w}{ }\PYG{n+nx}{redisClient}\PYG{p}{.}\PYG{n+nx}{get}\PYG{p}{(}\PYG{n+nx}{token}\PYG{p}{);}
\PYG{+w}{          }\PYG{c+c1}{// console.log(user)}

\PYG{+w}{          }\PYG{c+c1}{// console.log(\PYGZdq{}hola?\PYGZdq{})}
\PYG{+w}{          }\PYG{c+c1}{// await redisClient.connect();}
\PYG{+w}{          }\PYG{c+c1}{// console.log(\PYGZdq{}hola?\PYGZhy{}\PYGZhy{}\PYGZdq{})}
\PYG{+w}{          }\PYG{c+c1}{// const aaa=await redisClient.CLIENT\PYGZus{}INFO()}
\PYG{+w}{          }\PYG{c+c1}{// console.log(aaa)}
\PYG{+w}{          }\PYG{c+c1}{// await redisClient.set(\PYGZdq{}eee\PYGZdq{},\PYGZdq{}kkkkkk\PYGZdq{})}
\PYG{+w}{          }\PYG{c+c1}{// const value = await redisClient.get(eee)}
\PYG{+w}{          }\PYG{c+c1}{// console.log(value)}
\PYG{+w}{          }\PYG{c+c1}{// console.log(\PYGZdq{}hola\PYGZdq{})}

\PYG{+w}{          }\PYG{k}{return}\PYG{p}{\PYGZob{}}\PYG{n+nx}{db}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{user}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{token}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nx}{redisClient}\PYG{p}{\PYGZcb{};}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{      }\PYG{p}{\PYGZcb{});}
\PYG{+w}{      }\PYG{n+nx}{server}\PYG{p}{.}\PYG{n+nx}{listen}\PYG{p}{().}\PYG{n+nx}{then}\PYG{p}{((\PYGZob{}}\PYG{n+nx}{url}\PYG{p}{\PYGZcb{})}\PYG{+w}{ }\PYG{p}{=\PYGZgt{}}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+sb}{`Server is listening at }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{url}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{`}\PYG{p}{);}
\PYG{+w}{      }\PYG{p}{\PYGZcb{})}
\PYG{+w}{    }\PYG{p}{\PYGZcb{});}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}\PYG{k}{catch}\PYG{p}{(}\PYG{n+nx}{e}\PYG{p}{)\PYGZob{}}
\PYG{+w}{    }\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{e}\PYG{p}{)}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
